var url = require('url');
var querystring = require('querystring');
var PropertyInjection = require('./PropertyInjection');

RequestParameterFilter = function(){};

Object.defineProperty(RequestParameterFilter,"getMime",{
	value:function(request){
		var contentType = request.headers['content-type'] || '';
		return contentType.split(";")[0];
	}
});

Object.defineProperty(RequestParameterFilter,"isPostType",{
	value:function(request){
		return 'transfer-encoding' in request.headers || 'content-length' in request.headers; 
	}
});

Object.defineProperty(RequestParameterFilter,"isFileUpload",{
	value:function(mime){
		return mime === "multipart/form-data";
	}
});

Object.defineProperty(RequestParameterFilter,"getUrlQueryParameter",{
	value:function(request){
		return url.parse(request.url,true).query;
	}
});

Object.defineProperty(RequestParameterFilter,"getPostFormParameter",{
	value:function(arr){
		return querystring.parse(Buffer.concat(arr).toString());
	}
});

//具有相同参数时，以 postFormParameter 优先
Object.defineProperty(RequestParameterFilter,"unionUrlQueryParameteorAndPostFormParameter",{
	value:function(urlQueryParameteor,postFormParameter){
		return PropertyInjection.unionParameter(urlQueryParameteor,postFormParameter);
	}
});


Object.defineProperty(RequestParameterFilter,"parseMultipart",function(request){

});

Object.defineProperty(RequestParameterFilter,"doFilter",{
	value:function(request,response,next){
		console.log("RequestParameterFilter 2");
		//this.getMime(request);
		// get or post request ?
		var self = this;
		var urlQueryParameter = self.getUrlQueryParameter(request);

		var mime = self.getMime(request);
		//文件处理未完成
		if(self.isFileUpload(mime)){
			self.parseMultipart(request);
			next();
			return;
		}


		if(!self.isPostType(request)){
			request.parameter = urlQueryParameter;
			next();
			return;
		}
		var buffers = [];
		request.on('data', function(chunk){
	        buffers.push(chunk) ;  //获取post数据
	        //限制文件大小
		});
		request.on('end',function(){
			var postFormParameter = self.getPostFormParameter(buffers);
			var unionObject = self.unionUrlQueryParameteorAndPostFormParameter(urlQueryParameter,postFormParameter);
			request.parameter = unionObject;
			next();
		});
				


	}
});

module.exports = RequestParameterFilter;
