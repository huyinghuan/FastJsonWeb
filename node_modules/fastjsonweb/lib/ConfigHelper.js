var fs =  require("fs");
var path = require("path");
var MODULESNAME = "fastjsonweb";

ConfigHelper = function(){};

Object.defineProperty(ConfigHelper,"getModulesPath",{
	value:function(){
		return path.join(process.cwd(),"node_modules",MODULESNAME,"lib");
	}
});

Object.defineProperty(ConfigHelper,"getAssetsPath",{
	value:function(assets){
		var modulePath = this.getModulesPath();
		return assets 
				? path.join(modulePath,"assets",assets) 
				: path.join(modulePath,"assets") ;
	}
});

Object.defineProperty(ConfigHelper,"getAssets",{
	value:function(filename){
		var context = fs.readFileSync(this.getAssetsPath(filename),{encoding:"utf-8"});
		return JSON.parse(context);
	}
});


Object.defineProperty(ConfigHelper,"getLogConfig",{
	value: function(key){
		var configure = this.getAssets("DefaultConfigure.json");
	  	var LogConfigure = configure.log;
	  	if(typeof key === "undefined")
	  		return LogConfigure;
	  	return LogConfigure[key];
	}
});



Object.defineProperty(ConfigHelper,"getMime",{
	value:function(extension){
		var mime = this.getAssets("MIME.json");
		if(!extension || typeof extension === "undefined"){
			return mime;
		}
		return mime[extension];
	}
});

module.exports = ConfigHelper;