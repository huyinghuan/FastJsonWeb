/**
 * Created by ec on 14-6-6.
 * 数据类型 判断测试
 */
'use strick'
module.exports = (function(){
    var ObjectType = function(){};
    ObjectType.isArray = Array.isArray || function(obj){
        var _this = ObjectType;
        return  _this.getDataType(obj) === "Array";
    }

    ObjectType.isObject = function(obj){
        var _this = ObjectType;
        return  _this.getDataType(obj) === "Object";
    }

    /*
    * 获取数据类型
    * @parameter    return
    * []            "Array"
    * null          "Null"
    * void(0)       "Undefined"
    * function(){}  "Function"
    * ""            "String"
    * 123           "Number"
    * {}            "Object"
    * new Date()    "Date"
    * /s/           "RegExp"
    * true          "Boolean"
    * */
    ObjectType.getDataType = function(obj){
        return Object.prototype.toString.call(obj).slice(8,-1);
    }

    //判断是否是空的json对象.
    // 当前仅当如下情况时 返回true:  null ,void(0),和无枚举属性的Object,例如:{}
    ObjectType.isEmptyObject = function(obj){
        var _this = ObjectType;
        if(obj === void(0) || obj === null){
            return true;
        }
        if(!_this.isObject(obj)){
            return false;
        }
        for(var proto in obj){
            return  false;
        }
        return true;
    }

    //两个数据是否为相同数据类型
    ObectType.isSameObjectType = function(data1,data2){
        return ObjectType.getDataType(data1) === ObjectType.getDataType(data2);
    }
    return ObjectType;
})()