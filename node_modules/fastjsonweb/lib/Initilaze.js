//Initilze some date and check the configure files
var fs =  require('fs');
var path = require('path');
var APPROOT = process.cwd();

//return a json object by  reading similar '*.json' file


var InitilazeList = function(){};

//Extends some Object ,for example,the Date.format and so on.
Object.defineProperty(InitilazeList,"ExtendsObject",{
	value:function(){
		require("./ObjectExtends");
	},
	enumerable:true
});

//Check whether there is a mistake in handle.json
Object.defineProperty(InitilazeList,"CheckHandle",{
	value:function(){
		//check whether theres is a  configure.json on appliactions root
		// (Note : the configure.json is NOT the  modules/fastjsonweb's  assets/DefaultConfigure.json)
		var configurePath = path.join(APPROOT,"configure.json");
		var isConfigure = fs.existsSync(configurePath)
		if(isConfigure){
			//judge is config  the handle?

		}
	},
	enumerable:true
});


Object.defineProperty(InitilazeList,"test",{
	value:function(){
		var p = require("./ConfigHelper").getAssetsPath("testComment.json");
		var str =  fs.readFileSync(p,{encoding:"utf-8"});
	//	var singleLineComment = new RegExp("//.*","g");
	//	var singleLineComment = new RegExp("/\/\*[^]*\*\//","g");
	//	str =  str.replace(/\/\*[\s]*\*\//g,"");
		console.log(str);
	},
	enumerable:true
});



var Initilaze = function(){};
Object.defineProperty(Initilaze,"init",{
	value:function(){
		for(prop in InitilazeList){
			InitilazeList[prop]();
		}
	}
});

module.exports = Initilaze;